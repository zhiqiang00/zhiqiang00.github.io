<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hahahaha哈士奇</title>
  <icon>https://www.gravatar.com/avatar/466f864d3ea0d479eeb340cb0000cda6</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-06T11:31:50.626Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Wangzhiqiang</name>
    <email>1941686805@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git-时光机穿梭</title>
    <link href="http://example.com/2022/04/06/Git-%E6%97%B6%E5%85%89%E6%9C%BA%E7%A9%BF%E6%A2%AD/"/>
    <id>http://example.com/2022/04/06/Git-%E6%97%B6%E5%85%89%E6%9C%BA%E7%A9%BF%E6%A2%AD/</id>
    <published>2022-04-06T10:14:39.924Z</published>
    <updated>2022-04-06T11:31:50.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Git-时光机穿梭">1 Git-时光机穿梭</h2><p>更该之前提交的readme.txt文件，然后运行 <code>git status</code> 命令查看结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure><p><code>git status</code> 用来查看仓库当前的状态。这时只是告诉我们有文件被修改了，可以使用 <code>git diff</code> 命令查看具体改了什么。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br><span class="line">diff --git a/readme.txt b/readme.txt</span><br><span class="line">index 9f7547c..b18bfcc 100644</span><br><span class="line">--- a/readme.txt</span><br><span class="line">+++ b/readme.txt</span><br><span class="line">@@ -1,2 +1,2 @@</span><br><span class="line">-Git is a version control system.</span><br><span class="line">+Git is a distributed version control system.^M</span><br><span class="line"> Git is free software.</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><p>通常会显示的格式正是Unix通用的diff格式。</p><p>然后我们输入 <code>git status</code> 和 <code>git commit</code> 并输入 <code>git status</code> 查看状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><p>Git告诉我们当前没有需要提交的修改，而且，工作目录是干净（working tree clean）的。</p><h3 id="1-1-版本回退">1.1 版本回退</h3><p>再进行一次修改，用来进行验证。</p><p>使用 <code>git log</code> 命令显示从最近到最远的提交日志。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit 65b2fa1813525287243b334583a3460799c02895 (HEAD -&gt; master)</span><br><span class="line">Author: zhiqiang00 &lt;1941686805@qq.com&gt;</span><br><span class="line">Date:   Wed Apr 6 18:39:32 2022 +0800</span><br><span class="line"></span><br><span class="line">    append GPL</span><br><span class="line"></span><br><span class="line">commit 6cd35de4f4649ab8ad5093bb6cc69eea57858ff4</span><br><span class="line">Author: zhiqiang00 &lt;1941686805@qq.com&gt;</span><br><span class="line">Date:   Wed Apr 6 18:36:36 2022 +0800</span><br><span class="line"></span><br><span class="line">    修改readme</span><br><span class="line"></span><br><span class="line">commit b2fe4fff91ff3a0d22077ede1176eac3d6a9b4a3</span><br><span class="line">Author: zhiqiang00 &lt;1941686805@qq.com&gt;</span><br><span class="line">Date:   Wed Apr 6 11:45:50 2022 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br></pre></td></tr></table></figure><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上<code>--pretty=oneline</code>参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git log --pretty=oneline</span><br><span class="line">65b2fa1813525287243b334583a3460799c02895 (HEAD -&gt; master) append GPL</span><br><span class="line">6cd35de4f4649ab8ad5093bb6cc69eea57858ff4 修改readme</span><br><span class="line">b2fe4fff91ff3a0d22077ede1176eac3d6a9b4a3 wrote a readme file</span><br></pre></td></tr></table></figure><p><strong>准备进行回滚</strong>。首先Git需要知道当前是哪个版本，在Git中head表示当前版本，也就是最近commit的。上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p><p>现在把版本回退到上一个版本，使用 <code>git reset</code> :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit 6cd35de4f4649ab8ad5093bb6cc69eea57858ff4 (HEAD -&gt; master)</span><br><span class="line">Author: zhiqiang00 &lt;1941686805@qq.com&gt;</span><br><span class="line">Date:   Wed Apr 6 18:36:36 2022 +0800</span><br><span class="line"></span><br><span class="line">    修改readme</span><br><span class="line"></span><br><span class="line">commit b2fe4fff91ff3a0d22077ede1176eac3d6a9b4a3</span><br><span class="line">Author: zhiqiang00 &lt;1941686805@qq.com&gt;</span><br><span class="line">Date:   Wed Apr 6 11:45:50 2022 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br></pre></td></tr></table></figure><p>可以看到就剩下两个版本了。如果我们想要找回刚刚的那个最新的版本，就需要在命令行窗口还没有被关掉的时候去找到那个 <code>append GPL</code> 的 <code>commit id</code> ，然后指定回到未来的某个版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard 65b2fa1813525287243b334583a3460799c02895</span><br><span class="line">HEAD is now at 65b2fa1 append GPL</span><br></pre></td></tr></table></figure><p>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/06/0eb896e060889f6ca1b02758783ac351-image-20220406192748297-80f9ca.png" alt="image-20220406192748297"></p><p>如果窗口已经关了怎么办呢？Git提供了一个命令 <code>git reflog</code> 来记录我们的每一次命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">65b2fa1 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to 65b2fa1813525287243b334583a3460799c02895</span><br><span class="line">6cd35de HEAD@&#123;1&#125;: reset: moving to HEAD^</span><br><span class="line">65b2fa1 (HEAD -&gt; master) HEAD@&#123;2&#125;: commit: append GPL</span><br><span class="line">6cd35de HEAD@&#123;3&#125;: commit: 修改readme</span><br><span class="line">b2fe4ff HEAD@&#123;4&#125;: commit (initial): wrote a readme file</span><br></pre></td></tr></table></figure><p>这个时候又可以看见 <code>commit id</code> 了，又可以进行向后翻滚了(最新的版本)。</p><p><strong>疑难解答：</strong></p><p><br/><br/><br/></p><h2 id="引用-2">引用</h2><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896202780297248">廖雪峰的官方网站</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Git-时光机穿梭&quot;&gt;1 Git-时光机穿梭&lt;/h2&gt;
&lt;p&gt;更该之前提交的readme.txt文件，然后运行 &lt;code&gt;git status&lt;/code&gt; 命令查看结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Latex常用公式集合</title>
    <link href="http://example.com/2022/04/06/Latex%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2022/04/06/Latex%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F%E9%9B%86%E5%90%88/</id>
    <published>2022-04-06T06:40:27.335Z</published>
    <updated>2022-04-06T06:55:01.108Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="limits">\limits</h2><p>\limits可以将它后续跟随的_和^的上下标从右侧转至正上和正下方。需要和 <code>\mathop</code> 配合使用</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>a</mi><mo>=</mo><mover><mo><mi>y</mi></mo><mn>1</mn></mover><mspace linebreak="newline"></mspace><mi>a</mi><mo>=</mo><munder><mo><mi>y</mi></mo><mn>1</mn></munder><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">a = y_i \\a = \mathop{y} \limits^{1} \\a = \mathop{y} \limits_{1} \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3761em;vertical-align:-0.0625em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3136em;"><span style="top:-3.1319em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.7625em;margin-left:0.0359em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0625em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3421em;vertical-align:-0.7796em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5625em;"><span style="top:-2.3204em;margin-left:-0.0359em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.1319em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7796em;"><span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p><h2 id="mathop">\mathop</h2><p>\mathop相当于一个定义，在\mathop后的{}内的内容将会被当作一个整体来处理，上下标的位置将会由\mathop的框定范围来决定。注意看 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span> 的位置。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>θ</mi><mo>ˉ</mo></mover><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><msub><mo><mi>m</mi><mi>a</mi><mi>x</mi></mo><mi>θ</mi></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mover accent="true"><mi>θ</mi><mo>ˉ</mo></mover><mo>=</mo><msub><mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo></mo><mi>θ</mi></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bar \theta = arg \ \mathop{max}_{\theta}  \sum^N_{i=1} score(y_i, pred_i) \\\bar \theta = \mathop{\arg\min}_{\theta} \sum^N_{i=1} score(y_i, pred_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8312em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">score</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8312em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop"><span class="mop"><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.242em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">score</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="cdots">\cdots</h2><p>生成位于中间位置的省略号</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mi>N</mi></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mi>N</mi></mrow></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>w</mi><mi>N</mi></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mi>N</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_t = \frac{1}{N}(w_1 \times y_{t-1} + w_2 \times y_{t-2} + ... +w_N \times y_{t-N})\\y_t = \frac{1}{N}(w_1 \times y_{t-1} + w_2 \times y_{t-2} + \cdots +w_N \times y_{t-N})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;limits&quot;&gt;\limits&lt;/h2&gt;
&lt;p&gt;\limits可以将它后续跟随的_和^的上下标从右侧转至正上和正下方。需要和 &lt;code&gt;\mathop&lt;/code&gt; 配合使用&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex-disp</summary>
      
    
    
    
    <category term="工具使用" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Latex" scheme="http://example.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>LC-257. 二叉树的所有路径</title>
    <link href="http://example.com/2022/04/04/LC-257.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/"/>
    <id>http://example.com/2022/04/04/LC-257.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/</id>
    <published>2022-04-04T06:43:25.367Z</published>
    <updated>2022-04-04T07:35:01.268Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-257-二叉树的所有路径"><a href="https://leetcode-cn.com/problems/binary-tree-paths/">LC-257. 二叉树的所有路径</a></h2><h2 id="递归法-2">递归法</h2><p>这道题是一个简单题，虽然经过一番思考做了上来，但是确实是思维不清晰，所以还是要总结一下。</p><p>这道题是记录根节点到叶子节点的路径，最重要的是想明白<strong>返回条件</strong>。</p><ul><li><p>这道题是记录到叶子节点，自然是只有到叶子节点的时候，才会返回，也就是说左右子树都不存在的时候 <code>not root.left and not root.right</code>。不要对本层节点进行判断，那样会导致对叶子节点的左右子树判断，最后会同一个路径会添加两次。</p></li><li><p>这道题我采用的时先序遍历，体现在最开始遍历的时候就先把<code>root.val</code>加入到答案中啦~然后才进行的递归。</p></li><li><p>因为上面是判断了一个节点的左右孩子的存在性，没有判断这个节点是否存在，会出现空节点报错，所以在递归的时候，就先应该判断节点是否存在。**重点：**通过传参的时候用+拼接的方式传参，避免了后面还需要回退的问题，这是个小技巧。<strong>也就是说避免了先递归再回溯的问题。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> root.left: func(root.left, tmp + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(root.left.val))</span><br><span class="line"><span class="keyword">if</span> root.right: func(root.right, tmp + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(root.right.val))</span><br></pre></td></tr></table></figure></li><li><p>有人会好奇，如果没有左右孩子都不存在，那么本层的怎么返回呢？其实不会的，因为别忘记了我们最开始就判断了这个节点是不是叶子节点，如果是叶子节点直接添加，如果不是，则必然一个孩子。</p></li></ul><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">binaryTreePaths</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span><br><span class="line">        res = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">root, tmp</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> root.left <span class="keyword">and</span> <span class="keyword">not</span> root.right: </span><br><span class="line">                res.append(tmp)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">if</span> root.left: func(root.left, tmp + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(root.left.val))</span><br><span class="line">            <span class="keyword">if</span> root.right: func(root.right, tmp + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(root.right.val))</span><br><span class="line"></span><br><span class="line">        func(root, <span class="built_in">str</span>(root.val))</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="迭代法-2">迭代法</h2><p>迭代法依然使用前序遍历的方法。这里的主要思想是需要两个栈，同时讲节点和该节点对应的路径保存。什么叫该节点对一个的路径保存呢，意思就是说到这个节点为止，已经路径到哪了，这样如果它还有孩子直接把 这个路径取出，添加上孩子就好了。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/04/8fe694ddb9ebbb47ffd519dac4bb9270-image-20220404153029677-59ab66.png" alt="image-20220404153029677"></p><p>以示例为了，假如stack[1] = 2，那么path_st[2] = “1-&gt;2”，这样如果到节点5了，只需要取出path_st[2] = &quot;1-&gt;2&quot;加上5，并且5是叶子节点，直接添加到最后的result里面就可以了。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;二叉树的所有路径 迭代法&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">binaryTreePaths</span>(<span class="params">self, root: TreeNode</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span><br><span class="line">        <span class="comment"># 题目中节点数至少为1</span></span><br><span class="line">        stack, path_st, result = deque([root]), deque(), []</span><br><span class="line">        path_st.append(<span class="built_in">str</span>(root.val))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            cur = stack.pop()</span><br><span class="line">            path = path_st.pop()</span><br><span class="line">            <span class="comment"># 如果当前节点为叶子节点，添加路径到结果中</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (cur.left <span class="keyword">or</span> cur.right):</span><br><span class="line">                result.append(path)</span><br><span class="line">            <span class="keyword">if</span> cur.right:</span><br><span class="line">                stack.append(cur.right)</span><br><span class="line">                path_st.append(path + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(cur.right.val))</span><br><span class="line">            <span class="keyword">if</span> cur.left:</span><br><span class="line">                stack.append(cur.left)</span><br><span class="line">                path_st.append(path + <span class="string">&#x27;-&gt;&#x27;</span> + <span class="built_in">str</span>(cur.left.val))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-257-二叉树的所有路径&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-paths/&quot;&gt;LC-257. 二叉树的所有路径&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&quot;递归法-2&quot;&gt;递归法&lt;/h2&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Competition09-时间序列</title>
    <link href="http://example.com/2022/04/01/Competition09-%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/"/>
    <id>http://example.com/2022/04/01/Competition09-%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/</id>
    <published>2022-04-01T08:47:31.618Z</published>
    <updated>2022-04-06T09:36:47.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-时间序列">1 时间序列</h2><h3 id="1-1-简单定义">1.1 简单定义</h3><p>时间序列是按时间顺序索引的一系列数据点。</p><p>一般基于如下假设：</p><ul><li>数据文件中标签的值表示以等间隔时间进行的连续测量值。</li><li>假设数据存在相关性，然后通过建模找到对应的相关性，并利用它进行预测未来的数据走向。</li></ul><h3 id="1-2-常见问题">1.2 常见问题</h3><ul><li>从变量变量角度，可以分为单变量时间序列和多变量时间序列<ul><li>单变量时间序列指仅具有的单个时间相关变量，所以仅受时间因素的影响。可能受到相关性、趋势性、周期性和循环性等因素的影响。一般该类问题可以看做是多变量时间序列的一部分。</li><li>多变量时间序列具有多个时间相关变量，目标除了受到时间的影响外，还受到了其他因素影响。</li></ul></li><li>从预测目标角度，可以分为单步预测和多步预测<ul><li>单步预测是仅在训练集的时间基础上添加一个时间单位就可以作为测试集。实际上是一个普通回归问题，只不过输入变量不再是独立的特征变量，而是在时间线上有关系。</li><li>多步预测需要多添几个时间单位作为测试集。一般有两种解决方法：<ul><li>第一种，step by step，以单步预测为基础，预测后就作为真实值加入训练集对下一个时间单位进行预测。缺点：误差累加。</li><li>第二种，一次预测出所有时间步的结果，即看做多输出回归问题。这样避免了误差的累加，但是训练一对多的模型，加大了训练难度。、</li></ul></li></ul></li></ul><h3 id="1-3-交叉验证">1.3 交叉验证</h3><p>一般来说为了模型稳定性，我们选择交叉验证。由于时间序列中包含时间结构，在保留这种结构的同时不能在折叠出现数据穿越的情况，使用<strong>滚动交叉验证</strong>。</p><ul><li>思想是，使用初始时间到t时刻用来训练，然后从 t 到 t+n 时刻的数据用于线下验证，并计算批评价指标；</li><li>接下训练数据扩展到 t+n 时刻，然后使用 t+n 到 t+2n时刻的数据进行验证；</li><li>重复上面的步骤，直到达到最后一个标签值。验证次数可以自由控制，多次验证结果取平均值得到最终线下验证结果。</li></ul><h3 id="1-4-基本规则方法">1.4 基本规则方法</h3><p>由于数据中存在噪声或者由于发生了某些突发情况，导致模型不能学习到所有信息，使用规则方法能带来帮助。</p><ul><li><p>加权平均</p><p>加权平均就是先获取最近 N 个时间单位的值，如果数据存在周期性，也可以环比提取，即昨天、上周、上个月对应单位的值；然后将提取出的数据加权求和，通常离当前时间点越近的数据重要程度越高。一般来说，N 值一般考虑短期历史数据。加权平均公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>w</mi><mi>N</mi></msub><mo>×</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mi>N</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_t = \frac{1}{N}(w_1 \times y_{t-1} + w_2 \times y_{t-2} + \cdots +w_N \times y_{t-N})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 为当前时间单位的数值。</p><p>对于 N 值得选择和权重的确定是困难的，所以可以通过简单地线性搜索来确定 N 值和权重，线下验证进行最优搜索方式的公式是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>θ</mi><mo>ˉ</mo></mover><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><msub><mo><mi>m</mi><mi>a</mi><mi>x</mi></mo><mi>θ</mi></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bar \theta = arg \ \mathop{max}_{\theta}  \sum^N_{i=1} score(y_i, pred_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8312em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">score</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></li><li><p>指数平滑</p><p>在时间预测问题中，距离预测单位越近的时间点越重要。将每个时间单位的权重按照指数及进行衰减，并最终进行加权，这种方法称为指数平滑。其公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mi>a</mi><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi>t</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mi>n</mi></msup><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat y_t = a \sum_{n=0} ^ t (1 -a)^n y_{t - n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0477em;vertical-align:-1.2671em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7806em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat y_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 个时间点经过上面指数平滑后得到的值， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{t - n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 为第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">t - n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个时间点上的实际值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 是取当前时刻的前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个历史数据。 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 可理解为可调节参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a \in (0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> ，也称为记忆衰减因子。</p></li></ul><h2 id="2-时间序列模式">2 时间序列模式</h2><h3 id="2-1-趋势性">2.1 趋势性</h3><p>趋势性就是在很长一段时间内呈现数据持续上升或者下降的变动，不仅线性的，周期也可以。一般可以分为一介趋势和二阶趋势进行构造。一阶主要为相邻时间单位的数据分差、比例，反应相邻时间单位数据变化程度；二阶在一阶基础上进一步构建，主要反应一阶变化快慢。</p><h3 id="2-2周期性">2.2周期性</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-时间序列&quot;&gt;1 时间序列&lt;/h2&gt;
&lt;h3 id=&quot;1-1-简单定义&quot;&gt;1.1 简单定义&lt;/h3&gt;
&lt;p&gt;时间序列是按时间顺序索引的一系列数据点。&lt;/p&gt;
&lt;p&gt;一般基于如下假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据文件中标签的值表示以等间隔时间进行的连续测量值。</summary>
      
    
    
    
    <category term="竞赛" scheme="http://example.com/categories/%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="特征工程，时间序列" scheme="http://example.com/tags/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B%EF%BC%8C%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>解决服务器端可以使用的命令但是在远程终端无法使用的问题</title>
    <link href="http://example.com/2022/04/01/%E8%A7%A3%E5%86%B3%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E4%BD%86%E6%98%AF%E5%9C%A8%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/04/01/%E8%A7%A3%E5%86%B3%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E4%BD%86%E6%98%AF%E5%9C%A8%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-04-01T03:48:01.052Z</published>
    <updated>2022-04-01T04:00:58.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决服务器端可以使用的命令但是在远程终端无法使用的问题">解决服务器端可以使用的命令但是在远程终端无法使用的问题</h2><h3 id="问题背景">问题背景</h3><p>最近遇见了一个奇怪的问题，就是明明已经配置好了conda环境并且可以正常使用了。但是最近突然在远程终端无法使用，而在服务器终端却可以使用：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/01/ae5b11b4af4aa34ac08340a02ca4f2db-image-20220401112805048-9cc570.png" alt="image-20220401112805048"></p><p>最开始的解决办法是使用另一个账号作为桥梁，即先使用一个账号登录，然后<code>su</code>进去，这种方式很奇怪，并且觉得出现这个问题的原因应该就是conda的路径问题，但进入到<code>./.bashrc</code>看了一下，路径没有问题。于是开始各种查找资料…</p><h3 id="解决方法">解决方法</h3><p>重新使用终端连接服务器，并在终端中输入<code>source ~/.bashrc</code>。</p><p>推测的原因可能是因为远程终端突然没有了配置路径，虽然服务器那边的conda可用，但是配置路径没有刷新到远程终端。路径刷新成功后，如图会变成绿色：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/01/92efa974d912f5d4963342ca93f2f08e-image-20220401115555314-d25986.png" alt="image-20220401115555314"></p><p>虽然可以通过<code>source ~/.bashrc</code>可以解决，但每次进终端都得这样激活环境变量太过麻烦。</p><p>由于用于每次远程连接服务器端的时候，系统一般会先执行 <code>~/.bash_profile</code> 的配置文件，所以我们可以 <code>vim ~/.bash_profile</code> 打开 <code>~/.bash_profile</code> 配置文件开头添加如下代码(在vim编辑界面中，按 <code>i</code> 后进行插入编辑)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if test -f .bashrc ; then</span><br><span class="line">source .bashrc </span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/01/d76bb3d3a8c1c10bfb2e5e5311db7cd6-image-20220401115630942-dcd005.png" alt="image-20220401115630942"></p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/01/d685c05cb64f352e3186835d6168d07a-image-20220401114646129-28b94b.png" alt="image-20220401114646129"></p><p>然后按<code>ESC</code> + <code>:</code> + <code>wq</code> 进行保存退出。最后退出连接并重新进入，即可正常使用 <code>conda</code>命令啦~</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/01/785a35dfe5b6c3ba05d3601c2b74e6ba-image-20220401115652422-917c0e.png" alt="image-20220401115652422"></p><p><br />  <br />  <br /></p><blockquote><p><a href="https://blog.csdn.net/qq_43351000?type=blog">欢迎关注我的CSDN个人博客【请叫我哈士奇】~</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决服务器端可以使用的命令但是在远程终端无法使用的问题&quot;&gt;解决服务器端可以使用的命令但是在远程终端无法使用的问题&lt;/h2&gt;
&lt;h3 id=&quot;问题背景&quot;&gt;问题背景&lt;/h3&gt;
&lt;p&gt;最近遇见了一个奇怪的问题，就是明明已经配置好了conda环境并且可以正常使用了。但是最</summary>
      
    
    
    
    <category term="linux" scheme="http://example.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Git-简介</title>
    <link href="http://example.com/2022/03/31/Git-%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2022/03/31/Git-%E7%AE%80%E4%BB%8B/</id>
    <published>2022-03-31T09:50:26.410Z</published>
    <updated>2022-04-06T10:14:27.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Git-简介">1 Git-简介</h2><h3 id="1-1-Git的诞生">1.1 Git的诞生</h3><p>Linus在1991年创建了开源的Linux。Linus最开始是使用Bitkeeper进行版本控制，后来因为社区有人尝试破解Bitkeeper的协议，BitKeeper公司要收回免费使用权。于是，Linus花了两周时间自己用C写了一个分布式版本控制，这就是<strong>Git</strong>。</p><h3 id="1-2-集中式-VS-分布式">1.2 集中式 VS 分布式</h3><ul><li><p><strong>集中式</strong></p><p>集中式版本控制系统，版本库集中存放中央服务器。在干活的时候，需要先从中央服务器取得最新版本，然后开始干活，干完活后再把自己的活推送给中央服务器。集中式最大的毛病就是必须联网才可以。</p><p>所有的版本数据都存在服务器上，用户的本地设备只能看到自己以前所同步的版本，如果不连网的话，用户就看不到历史版本。</p></li></ul><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/06/ac5b0c9152a30aef52c1871194cd4b05-image-20220406105153228-506b89.png" alt="image-20220406105153228"></p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/06/0f73c49a3f69289c7b533a878f646804-image-20220406110129054-a85b48.png" alt="image-20220406110129054"></p><ul><li><p><strong>分布式</strong></p><p>分布式控制系统中没有“中央服务器”，每个人电脑都是一个完整的版本库。两个人同时修改同一个文件<strong>A</strong>，这是只需要把各自修改的内容推送到对方，就可以相互看到对方的修改了。分布式除了不需要联网外，安全性能要高很多，因为每个人电脑里面都有一个完整版。</p><p>也需要一个“版本集中存放的服务器”，但是这个服务器仅用来方便“交换”修改，没有他一样干活。<strong>而每一台电脑有各自独立的开发环境，不需要联网，本地直接运行，相对集中式安全系数高很多。</strong></p><p>分布式不是复制指定版本的快照，而是把所有的版本信息仓库同步到本地，可以离线本地提交，只有需要联网时push到相应的服务器或者其他用户那里。也就是平时自己<code>git add</code>就是本地，<code>git push</code>就是同步远程。</p></li></ul><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/06/04f91ae7fa2ddf9fe585217bcd1212f2-image-20220406105212046-23c76b.png" alt="image-20220406105212046"></p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/04/06/b443a8cfaae5c9f9c308b3149e24611b-image-20220406110720175-db0c3d.png" alt="image-20220406110720175"></p><ul><li><p><strong>区别</strong><br>你的本地是否有完整的版本库历史！<br>假设SVN服务器没了，那你丢掉了所有历史信息，因为你的本地只有当前版本以及部分历史信息。SVN每次都需要联网commit。<br>假设GitHub服务器没了，你不会丢掉任何git历史信息，因为你的本地有完整的版本库信息。你可以把本地的git库重新上传到另外的git服务商。Git只有在Push、pull 的时候需要联网，而我们平时更多的操作应是commit。</p><p>针对分布式，我们平时用git commit的命令就是在自己本地仓库进行版本控制，和远程没关系。只有需要大家一起同步的时，我们才会“随便”找一个大家统一认定的电脑进行同步。也就是说，分布式是“同步原则”，平时自己提交到自己的本地仓库，需要同步的时候，我们进行push同步。即使断网了，让然可以进行版本回滚和更新，因为有完整的版本信息。</p><p>针对集中式，我们本地只有当前版本和部分历史版本，这时候如果断网或者中央服务器挂了，那么所有的历史版本就都没有了，无法回滚版本。每次commit都需要联网，所以无法进行回滚和更新。</p></li></ul><h2 id="2-Git安装">2 Git安装</h2><p>Git是分布式版本控制系统，所以每个机器都必须说明自己的情况：你的名字和Email地址。</p><p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="3-创建版本库">3 创建版本库</h2><p>所谓版本库(repository)可以理解为一个目录，里面的所有的文件都可以被Git管理起来，能跟踪文件的修改、删除，便于追踪和还原。</p><h3 id="3-1-创建空目录：">3.1 创建空目录：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir learngit</span><br><span class="line">cd learngit</span><br><span class="line">pwd</span><br><span class="line">/d/learngit</span><br></pre></td></tr></table></figure><h3 id="3-2-初始化为IGt可以管理的仓库">3.2 初始化为IGt可以管理的仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/learngit/.git/</span><br></pre></td></tr></table></figure><p>该目录下面会生成一个<code>.git</code>的目录，用于跟踪和管理版本库。当然，不一定在新的空目录下，有东西的目录也可以初始化为Git仓库。</p><h3 id="3-2-把文件添加到版本库">3.2 把文件添加到版本库</h3><p>首先明确，所有的版本控制系统其实只能跟踪文本文件的改动，比如TXT文件网页和代码等，包括Git，无法跟踪图片、视频等二进制文件，只知道大小改变了，无法知道改了哪里。</p><p>不要使用Windows自带的记事本，原因是Microsoft开发记事本的团队使用在每个文件开头添加了0xefbbbf（十六进制）的字符的方式来保存UTF-8编码的文件，会导致遇到很多不可思议的问题。</p><p>第一步，使用 <code>git add</code> 告诉Git，把文件添加到仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure><p>没有输出。</p><p>第二步，使用 <code>git commit</code> 告诉Git，把文件提交到仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;wrote a readme file&quot;</span><br></pre></td></tr></table></figure><p><code>git commit</code>命令执行成功后会告诉你，<code>1 file changed</code>：1个文件被改动（我们新添加的readme.txt文件）；<code>2 insertions</code>：插入了两行内容（readme.txt有两行内容）。</p><p><strong>疑难解答：</strong></p><p>Q：输入<code>git add readme.txt</code>，得到错误<code>fatal: pathspec 'readme.txt' did not match any files</code>。</p><p>A：添加某个文件时，该文件必须在当前目录下存在，用<code>ls</code>或者<code>dir</code>命令查看当前目录的文件，看看文件是否存在，或者是否写错了文件名。</p><p><br/><br/><br/></p><h2 id="引用">引用</h2><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896202780297248">廖雪峰的官方网站</a></p><p><a href="https://blog.csdn.net/sjt19910311/article/details/83685420?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_paycolumn_v3&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4">集中式版本控制与分布式版本控制</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Git-简介&quot;&gt;1 Git-简介&lt;/h2&gt;
&lt;h3 id=&quot;1-1-Git的诞生&quot;&gt;1.1 Git的诞生&lt;/h3&gt;
&lt;p&gt;Linus在1991年创建了开源的Linux。Linus最开始是使用Bitkeeper进行版本控制，后来因为社区有人尝试破解Bitkeep</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Paper-A Simple Framework for Contrastive Learning of Visual Representations</title>
    <link href="http://example.com/2022/03/31/Paper-A-Simple-Framework-for-Contrastive-Learning-of-Visual-Representations/"/>
    <id>http://example.com/2022/03/31/Paper-A-Simple-Framework-for-Contrastive-Learning-of-Visual-Representations/</id>
    <published>2022-03-31T09:28:11.698Z</published>
    <updated>2022-04-01T01:21:58.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-Simple-Framework-for-Contrastive-Learning-of-Visual-Representations-SimCLR">A Simple Framework for Contrastive Learning of Visual Representations(SimCLR)</h2><blockquote><p>论文方向：图像领域</p><p>论文来源：2020 International Conference on Machine Learning</p><p>论文链接：<a href="https://arxiv.org/abs/2002.05709">https://arxiv.org/abs/2002.05709</a></p><p>论文代码：<a href="https://github.com/google-research/simclr">https://github.com/google-research/simclr</a></p></blockquote><h2 id="摘要">摘要</h2><p>这篇文介绍了SimCLR，用于视觉表示对比学习的简单框架。这里作者化简最近提出的对比自监督学习算法，不再需要专门的架构和存储库。对于为什么对比学习任务能学到有用的表示，作者们系统的研究了自己的框架，给出以下三个说明：</p><ul><li>数据增强的组合在定义有效任务中有效的预测任务中有着关键作用；</li><li>在表示学习和对比损失之间引入非线性变化大大提高了表示学习的质量；</li><li>对比学习相比于有监督学习，受益于更大的batch sizes和更多的training steps。</li></ul><p>通过上面这些发现，作者能够大大的优化以前在ImageNet上进行自监督和半监督的学习方法。</p><h2 id="1-介绍">1. 介绍</h2><p>在没有人工监督的情况下的学习有效的视觉表示方法是一个长久的问题，一般分类如下两类：生成式(generative)和判别式(discriminative)。生成方法学习在输入空间中生成或以其他方式 建模像素。判别方法使用类似于监督学习的目标函数来学习表示，但训练网络执行网络前置任务（Pretex task的好处就是简化了原任务的求解，在深度学习里就是避免了人工标记样本，实现无监督的语义提取），其中输入和标签都来自未标记的数据集。许多这样的方法依赖于启发式来设计网络前置任务。</p><p>为了了解什么能够实现良好的对比表示学习，作者系统地研究了他们的框架的主要组成部分并表明：</p><ul><li>多多个数据增强操作的组合对于定义产生有效表示的对比预测任务至关重要。同时，无监督的对比学习更受益于更强的数据增强。</li><li>在表示和对比损失之间引入可学习的非线性变换大大提高了学习表示的质量。</li><li>具有对比交叉熵损失的表示学习受益于归一化嵌入和适当的调整温度参数(<a href="https://zhuanlan.zhihu.com/p/132785733">temperature parameter</a>)</li><li>对比学习相比于有监督学习，受益于更大的 batch sizes 和更长时间的训练。并且也更受益于更深更宽的网络。</li></ul><h2 id="2-方法">2. 方法</h2><h3 id="2-1-The-Contrastive-Learning-Framework">2.1 The Contrastive Learning Framework</h3><p>SimCLR 在潜在空间中通过对比损失最大化同一个数据不同增强视图之间的一致性来表示学习。在这个框架下一共包括了四个组件，如图所示：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/31/d5400b85d6a71807b9df6206c02a1389-image-20220331210653510-662af6.png" alt="image-20220331210653510"></p><ul><li>一个随机数据增强模块，他随机转换任何给定数据实例，产生表示同一个示例的两个相关视图，表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ，我们将其视为正对(positive pair)。该文章中，作者使用了三个简单的随机这随机增强：随机裁剪，然后将大小调整回原始大小、随机颜色失真和随机高斯模糊。如第 3 节所示，随机裁剪和颜色失真的组合对于获得良好的性能至关重要。</li><li>使用神经网络基础的编码器 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> 从增强数据中提取表示向量。这个框架可以任意选择网络架构，没有限制。该文选择简单，采用常用的 ResNet。 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">h</mi><mi>i</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mover accent="true"><mi mathvariant="bold-italic">x</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mi>e</mi><mi>s</mi><mi>N</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mover accent="true"><mi mathvariant="bold-italic">x</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\boldsymbol{h}_i = f(\widetilde {\boldsymbol{x}}_i)=ResNet(\widetilde {\boldsymbol{x}}_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">h</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7044em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span></span><span class="svg-align" style="top:-3.4444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">es</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7044em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span></span><span class="svg-align" style="top:-3.4444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">h</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{h}_i \in \mathbb R^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">h</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span> 是经过了平均池化层后的输出。</li><li>使用已将小型的神经网络projection head <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> 将表示映射到使用的对比损失空间中。这里使用了具有一层隐藏层的<strong>MLP</strong>去映射：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">z</mi><mi>i</mi></msub><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">h</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><msub><mi mathvariant="bold-italic">h</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\boldsymbol z_i = g(\boldsymbol h_i) = W^{(2)} \sigma(W^{(1)} \boldsymbol h_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04213em;">z</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">h</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">h</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。像第四部分说的，相比于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">h</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04213em;">z</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 能更好的定于对比损失。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;A-Simple-Framework-for-Contrastive-Learning-of-Visual-Representations-SimCLR&quot;&gt;A Simple Framework for Contrastive Learning of Visual </summary>
      
    
    
    
    <category term="论文阅读" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="对比学习" scheme="http://example.com/tags/%E5%AF%B9%E6%AF%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="无监督" scheme="http://example.com/tags/%E6%97%A0%E7%9B%91%E7%9D%A3/"/>
    
  </entry>
  
  <entry>
    <title>LC-104.二叉树的最大深度</title>
    <link href="http://example.com/2022/03/31/LC-104%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/"/>
    <id>http://example.com/2022/03/31/LC-104%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</id>
    <published>2022-03-31T03:53:43.335Z</published>
    <updated>2022-04-06T00:49:16.800Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-104-二叉树的最大深度"><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">LC-104.二叉树的最大深度</a></h2><p>这道题是一道简单题，可以使用递归法和迭代法进行求解。</p><h2 id="迭代法">迭代法</h2><p>迭代法最好就使用队列进行层序遍历，这样每遍历一层，深度+1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxDepth</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        depth = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line">        que = deque([root])</span><br><span class="line">        <span class="keyword">while</span> que:</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">            size = <span class="built_in">len</span>(que)</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">                cur = que.popleft()</span><br><span class="line">                <span class="keyword">if</span> cur.left: que.append(cur.left)</span><br><span class="line">                <span class="keyword">if</span> cur.right: que.append(cur.right)</span><br><span class="line">        <span class="keyword">return</span> depth</span><br></pre></td></tr></table></figure><h2 id="递归法">递归法</h2><p>递归法这部分其实可以分为前序遍历（中左右），也可以使用后序遍历（左右中）。使用前序求的就是深度，使用后序求的是高度，<strong>而根节点的高度就是二叉树的最大深度</strong>。</p><ul><li><strong>前序（中左右）</strong></li></ul><p>前序其实就是在递归之前就已经将本层的深度加进去，然后再进行递归，是从上至下的。这体现出了从上之下逐层递归+1的思想。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def maxDepth(self, root: Optional[TreeNode]) -&gt; int:</span><br><span class="line">        depth = 0</span><br><span class="line">        def digui(root, depth):</span><br><span class="line">        # 这里直接返回了depth，所以上一层递归的时候，不需要额外判断左右孩子是否存在。</span><br><span class="line">            if not root: return depth</span><br><span class="line"></span><br><span class="line">            l_d = digui(root.left, depth + 1)</span><br><span class="line">            r_d = digui(root.right, depth + 1)</span><br><span class="line">            return max(l_d, r_d)</span><br><span class="line"></span><br><span class="line">        return digui(root, depth)</span><br></pre></td></tr></table></figure><ul><li><strong>后序遍历（左右中）</strong></li></ul><p>后序遍历就是每次从下至上的。也就说到最底层后，每次向上一层返回时，再取左右子树最高的高度后+1，这体现出了从下至上的求高度的过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxdepth</span>(<span class="params">self, root: treenode</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">return</span> self.getdepth(root)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getdepth</span>(<span class="params">self, node</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> node:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        leftdepth = self.getdepth(node.left) <span class="comment">#左</span></span><br><span class="line">        rightdepth = self.getdepth(node.right) <span class="comment">#右</span></span><br><span class="line">        depth = <span class="number">1</span> + <span class="built_in">max</span>(leftdepth, rightdepth) <span class="comment">#中</span></span><br><span class="line">        <span class="keyword">return</span> depth</span><br></pre></td></tr></table></figure><p><a href="https://leetcode-cn.com/problems/maximum-depth-of-n-ary-tree/">559. N 叉树的最大深度</a></p><p>这里有一道类似的题，思想是一样的，只不过递归的时候，因为是N叉树，不是直接递归左右子树，而是用一个循环依次递归children。每次递归用一个tmp记录，然后找到这个tmp最大值(也就是高度最大的子树)，然后加一。</p><p>这里有个需要注意的点，如果某个节点没有子树的话，我们循环的时候就会报错，需要提前判断。如果没有children，直接return 1，而不是0。这是为什么呢，因为后序遍历都是先递归返回后再+1，如果没有children没有子树就不会递归，就没有机会去+1，所以我们应该直接去+1.当然，这也就是说，<strong>我们的返回条件提前了一层，不是去判断这个节点本身是否存在，而是判断他的children是否存在，如果存在则递归，不存在直接return 1， 而不是0。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxDepth</span>(<span class="params">self, root: <span class="string">&#x27;Node&#x27;</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 使用后序遍历</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">digui</span>(<span class="params">root</span>):</span><br><span class="line">            <span class="comment"># if not root:</span></span><br><span class="line">            <span class="comment">#     return 0</span></span><br><span class="line">            tmp_depth = []</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> root.children: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> child <span class="keyword">in</span> root.children:</span><br><span class="line">                tmp_depth.append(digui(child))</span><br><span class="line">            depth = <span class="number">1</span> + <span class="built_in">max</span>(tmp_depth)</span><br><span class="line">            <span class="keyword">return</span> depth</span><br><span class="line">        <span class="keyword">return</span> digui(root)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-104-二叉树的最大深度&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/&quot;&gt;LC-104.二叉树的最大深度&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这道题是一道简单题，可以使用</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="数学规律" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>如使用清华镜像快速下载</title>
    <link href="http://example.com/2022/03/30/%E5%A6%82%E4%BD%BF%E7%94%A8%E6%B8%85%E5%8D%8E%E9%95%9C%E5%83%8F%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD/"/>
    <id>http://example.com/2022/03/30/%E5%A6%82%E4%BD%BF%E7%94%A8%E6%B8%85%E5%8D%8E%E9%95%9C%E5%83%8F%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD/</id>
    <published>2022-03-30T09:02:35.342Z</published>
    <updated>2022-03-30T09:06:27.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题背景">问题背景</h2><p>平时安装一些python包的过程中，总会面临安装下载过慢，<code>time out</code>的情况，今天提供一个方法能够快速安装包。首先介绍一下官网提供的方法。</p><h2 id="官网下载方法">官网下载方法</h2><p>这里以下载dgl为例、</p><ul><li>首先去<a href="https://www.dgl.ai/pages/start.html">dgl官网</a>，点击install，可以看到如下界面：</li></ul><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/e36ad8f3b33917db693979345b1be384-image-20220330163854997-89a580.png" alt="image-20220330163854997"></p><ul><li><p>根据你的服务器or电脑的配置选择相关配置，然后在命令行里面输入Run this 的代码。这里以linux为例，输入<code>nvidia-smi</code>查看自己的cuda的版本(这里如果你有自己的虚拟环境，记得使用 <code>conda activate xxx</code> 激活)，如下：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/32e8629551399304dc26382b1503bdda-image-20220330164252219-8eaab4.png" alt="image-20220330164252219"></p><p>一般情况下，<strong>使用这种办法容易碰到time out</strong>的错误，原因就是网络不稳定造成的。这时候我们考虑使用清华镜像。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/5f112d7872fc3224accbaa46d32b3c6a-image-20220330164528766-57aaf3.png" alt="image-20220330164528766"></p></li></ul><h2 id="使用清华镜像">使用清华镜像</h2><p>在使用清华镜像的时候，我们一般就是使用<code>pip install package -i https://pypi.tuna.tsinghua.edu.cn/simple </code> 这样的方式，下载，但是有时候我们会碰到如下的报错：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/802b1155b5987b0f49c4cd4a8a6d917b-image-20220330165208169-4163c0.png" alt="image-20220330165208169"></p><p>这个错误的原因是因为在清华镜像源中，没有和我们想要的包的名字相同。这时我们需要进入到<a href="https://pypi.tuna.tsinghua.edu.cn/simple/">镜像</a>中，<code>ctrl + F</code>检索我们要的包，找到一个和我们的版本相近似的或者和cuda兼容的包：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/587e27a44c9afd4273b4da8f796f3940-image-20220330165116062-ebb0aa.png" alt="image-20220330165116062"></p><p>然后，重新下载(这里以dgl-cu111为例)，输入命令<code>pip install dgl-cu111 dglgo  -i https://pypi.tuna.tsinghua.edu.cn/simple</code> :</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/30/e3842c9d275500e9768a6bcf6e6a6bfc-image-20220330165553413-579e26.png" alt="image-20220330165553413"></p><p>然后就可以快速下载啦~</p><blockquote><p><a href="https://blog.csdn.net/qq_43351000?type=blog">欢迎关注我的CSDN个人博客~</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题背景&quot;&gt;问题背景&lt;/h2&gt;
&lt;p&gt;平时安装一些python包的过程中，总会面临安装下载过慢，&lt;code&gt;time out&lt;/code&gt;的情况，今天提供一个方法能够快速安装包。首先介绍一下官网提供的方法。&lt;/p&gt;
&lt;h2 id=&quot;官网下载方法&quot;&gt;官网下载方法&lt;/</summary>
      
    
    
    
    <category term="python，linux" scheme="http://example.com/categories/python%EF%BC%8Clinux/"/>
    
    
    <category term="python，linux" scheme="http://example.com/tags/python%EF%BC%8Clinux/"/>
    
  </entry>
  
  <entry>
    <title>LC-101.对称二叉树</title>
    <link href="http://example.com/2022/03/30/LC-101%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://example.com/2022/03/30/LC-101%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2022-03-30T07:30:58.488Z</published>
    <updated>2022-04-06T00:25:01.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-101-对称二叉树"><a href="https://leetcode-cn.com/problems/symmetric-tree/">LC-101.对称二叉树</a></h2><h2 id="递归法">递归法</h2><p>使用递归的时候，主要思想是将根节点下面左右子树分别同时递归，然后在递归过程中进行比较，需要注意的时，比较的时候，应该是同层的 <strong>n1.left 和 n2.right</strong>  以及  <strong>n1.right 和 n2.left</strong> 进行比较，最后如果这两个比较同时为True，那么该层的递归返回True。(<strong>这里之所以这样比较，是因为这是判断中心轴对称问题</strong>)</p><p>按照递归三部曲</p><ol><li><p>确定递归函数的参数和返回值</p><p>这里比较根节点的两个子树，所以输入函数的应该是两个子树。返回值，就是是否该层递归比较的结果</p></li><li><p>确定终止条件、</p><p>这里是重点，之所以说这里是重点，是因为如果不处理好终止条件，就没办法控制节点为空的情况，那么后面数值比较的时候就会出现空指针的问题。</p><p><strong>节点有空的情况有：</strong></p></li></ol><ul><li><p>左边空，右边不空，不对称，return False</p></li><li><p>左边不空，右边空，不对称，return False</p></li><li><p>左右都空，对称，return True</p><p><strong>节点不空的情况(排除了上面为空的情况，下面就是都不空了)：</strong></p><p>左右都不空，如果val不相等，不那么return False。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> left == <span class="literal">None</span> <span class="keyword">and</span> right != <span class="literal">None</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">elif</span> left != <span class="literal">None</span> <span class="keyword">and</span> right == <span class="literal">None</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">elif</span> left == <span class="literal">None</span> <span class="keyword">and</span> right == <span class="literal">None</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment">#排除了空节点，再排除数值不相同的情况</span></span><br><span class="line"><span class="keyword">elif</span> left.val != right.val: <span class="keyword">return</span> <span class="literal">False</span>    </span><br></pre></td></tr></table></figure><p>这里可以看到我们最后一个用的是elif而不是else，**在这之后，就只有左右不为空并且数值相同了。**所以在这个节点判断完了之后，我们才可以进行单层递归，否则这里就直接返回了。换句话说，只有本层确定是可以了，我们才继续递归，同时对本层的比较不再额外return，本层的return用来返回本层四个节点的两两比较(n1.left 和 n2.right  以及  n1.right 和 n2.left)。</p></li></ul><ol start="3"><li><p>确定单层递归的逻辑</p><p>单层递归的逻辑就是处理 左右节点都不为空，且数值相同的情况</p><p>也就是在递归的时候，比较n1.left 和 n2.right  以及  n1.right 和 n2.left，并分别返回bool值，如果都对此则return True，否则 False</p><p>这里可以理解为最后将两个结果进行比较的时候，在进行左右子树的根节点的处理，于是整个过程退化近似后序遍历。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">outside = self.compare(left.left, right.right) <span class="comment">#左子树：左、 右子树：右</span></span><br><span class="line">inside = self.compare(left.right, right.left) <span class="comment">#左子树：右、 右子树：左</span></span><br><span class="line">isSame = outside <span class="keyword">and</span> inside <span class="comment">#左子树：中、 右子树：中 （逻辑处理）</span></span><br></pre></td></tr></table></figure></li></ol><p>迭代法使用了一个小的技巧，就是每次使用一个容器把两边的节点同时加入到这个容器当中，然后进行比较就好了，这个容器可以是<strong>队列</strong>也可以是<strong>栈</strong>。</p><ul><li><p>在每次取出两个节点进行比较的时候：</p><ul><li>判断是否同时为空，如果是，则是对称的，并且不需要添加新的节点了，所以用continue。</li><li>如果上面判断后，如果两个节点有一个为空，或者都不为空但是数值不同，那么return False</li></ul></li><li><p>最后，交叉加入新的节点，具体如下(和上面所提一样)：</p><ul><li>queue.append(leftNode.left) #加入左节点左孩子</li><li>queue.append(rightNode.right) #加入右节点右孩子</li><li>queue.append(leftNode.right) #加入左节点右孩子</li><li>queue.append(rightNode.left) #加入右节点左孩子</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isSymmetric</span>(<span class="params">self, root: TreeNode</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        queue = collections.deque()</span><br><span class="line">        queue.append(root.left) <span class="comment">#将左子树头结点加入队列</span></span><br><span class="line">        queue.append(root.right) <span class="comment">#将右子树头结点加入队列</span></span><br><span class="line">        <span class="keyword">while</span> queue: <span class="comment">#接下来就要判断这这两个树是否相互翻转</span></span><br><span class="line">            leftNode = queue.popleft()</span><br><span class="line">            rightNode = queue.popleft()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> leftNode <span class="keyword">and</span> <span class="keyword">not</span> rightNode: <span class="comment">#左节点为空、右节点为空，此时说明是对称的</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">#左右一个节点不为空，或者都不为空但数值不相同，返回false</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> leftNode <span class="keyword">or</span> <span class="keyword">not</span> rightNode <span class="keyword">or</span> leftNode.val != rightNode.val:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            queue.append(leftNode.left) <span class="comment">#加入左节点左孩子</span></span><br><span class="line">            queue.append(rightNode.right) <span class="comment">#加入右节点右孩子</span></span><br><span class="line">            queue.append(leftNode.right) <span class="comment">#加入左节点右孩子</span></span><br><span class="line">            queue.append(rightNode.left) <span class="comment">#加入右节点左孩子</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="迭代法-栈">迭代法(栈)</h2><p>就是换了一个容器，直接将队列换成栈就可以啦~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-101-对称二叉树&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/symmetric-tree/&quot;&gt;LC-101.对称二叉树&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&quot;递归法&quot;&gt;递归法&lt;/h2&gt;
&lt;p&gt;使用递归的时候，主要思想</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Competition06-模型融合</title>
    <link href="http://example.com/2022/03/28/Competition06-%E6%A8%A1%E5%9E%8B%E8%9E%8D%E5%90%88/"/>
    <id>http://example.com/2022/03/28/Competition06-%E6%A8%A1%E5%9E%8B%E8%9E%8D%E5%90%88/</id>
    <published>2022-03-28T07:40:41.926Z</published>
    <updated>2022-04-01T08:45:49.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模型融合">模型融合</h2><p>模型融合，也叫做集成学习，将不同模型的优点进行结合。下面介绍了怎么产生有差异性的模型，然后介绍两种模型融合的方式：</p><h3 id="1-构建多样性">1. 构建多样性</h3><p>多样性是指子模型之间存在差异，可以通过降低子模型的同质性来构建多样性。</p><h4 id="1-1-特征多样性">1.1 特征多样性</h4><p>构建多个有差异的特征集并分别进行建模，可以使特征存在不同的超空间，从而使多个模型有不同的泛化能力。实践中，不同队友之间的特征集往往是不一样的，直接进行模型融合一般会有一定提升。</p><p>随机森林、XGBoost和LightGBM这三个里面都有参数可以设置，其实就是构建特征的多样性。</p><h4 id="1-2-样本多样性">1.2 样本多样性</h4><p>样本多样性是将数据集切分为多份，然后进行分别建模。有时候切分数据集不是随意的，而是根据具体的赛题，最大限度并且合理的去切分数据集，从而既能保证多样性，还能更好的让模型捕获不同方面的数据特征。</p><h4 id="1-3-模型多样性">1.3 模型多样性</h4><p>不同模型对数据的表达能力是不同的：</p><ul><li>FM能够学习到特征之间的交叉信息，并且记忆力较强；</li><li>树模型可以很好的处理连续特征和离散特征(LightGBM和CatBoost)，并且对异常值也具有较好的健壮性。</li><li>传统的树模型和神经网络也需要尝试，并进行融合。</li></ul><p>处理上述方法，还可以<strong>训练目标多样性</strong>、<strong>参数多样性</strong>和<strong>损失函数多样性</strong>。</p><h3 id="2-训练过程融合">2. 训练过程融合</h3><p>训练过程融合的模型包括随机森林和XGBoost，这两个模型都是在训练中构造多个决策树进行融合。</p><p>其中，<strong>随机森林通过Bagging的方式</strong>，<strong>XGBoost通过Boosting的方式</strong>进行融合。</p><h3 id="3-训练结果融合">3. 训练结果融合</h3><p>主要包括加权法，Stacking和Blending。结果融合的方式选择和具体的赛题和评价规则有很大的关系。</p><h4 id="3-1-加权法">3.1 加权法</h4><p>针对一系列任务（比如分类和回归）和评价指标（如AUC，MSE和Logloss）都是有效的。</p><p>具体做法是有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个算法模型并都预测了结果，直接对着 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个结果取平均值或者给予每个算法不同的权重然后加权求和，记得到了融合结果。</p><p>这个方法，通常可以减少过拟合，因为每个模型有一定的噪音；同时，可以平滑噪声，提高模型泛化能力。</p><ul><li><p><strong>分类问题</strong></p><p>输出是one-hot类型，可以使用加权加或者投票法。</p></li><li><p><strong>回归问题</strong></p><p>针对结果可以考虑使用<strong>加权法</strong>、<strong>算数平均</strong>和<strong>几何平均</strong>，这个和不同的赛题设置的评分规则有关系。</p><p>2019年腾讯广告大赛中，评分规则是对称平均绝对百分比误差(SMAPE)，这个规则越小的值对评分影响越大，而算是平均会导致结果偏大，所以选择<strong>几何平均</strong>。</p></li><li><p><strong>排序问题</strong></p></li></ul><h4 id="3-2-Stacking融合">3.2 Stacking融合</h4><p>为了解决加权法需要人工确定权重的问题，使用一个新的模型来学习每个分类器的权重。这就是Stacking的融合思想。</p><p>注意：</p><ul><li>构建的新的模型一般是简单模型，比如逻辑回归线性模型；</li><li>使用多个模型斤进行Stacking融合会有比较好的结果。</li></ul><p>详细介绍在参考文献。</p><h4 id="3-3-Blending融合">3.3 Blending融合</h4><p>见参考文献</p><blockquote><p><strong>参考文献</strong></p><ol><li><a href="https://zhuanlan.zhihu.com/p/25836678">【机器学习】模型融合方法概述</a></li><li><a href="https://zhuanlan.zhihu.com/p/26890738">Kaggle机器学习之模型融合（stacking）心得</a></li><li><a href="https://blog.csdn.net/sinat_35821976/article/details/83622594">图解Blending&amp;Stacking</a></li><li><a href="https://blog.csdn.net/sinat_35821976/article/details/89845588">从零实现机器学习算法(七) Blending</a></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;模型融合&quot;&gt;模型融合&lt;/h2&gt;
&lt;p&gt;模型融合，也叫做集成学习，将不同模型的优点进行结合。下面介绍了怎么产生有差异性的模型，然后介绍两种模型融合的方式：&lt;/p&gt;
&lt;h3 id=&quot;1-构建多样性&quot;&gt;1. 构建多样性&lt;/h3&gt;
&lt;p&gt;多样性是指子模型之间存在差异，可以</summary>
      
    
    
    
    <category term="竞赛" scheme="http://example.com/categories/%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="模型融合" scheme="http://example.com/tags/%E6%A8%A1%E5%9E%8B%E8%9E%8D%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>我的本科经历</title>
    <link href="http://example.com/2022/03/28/%E6%9C%AC%E7%A7%91%E7%BB%8F%E5%8E%86/"/>
    <id>http://example.com/2022/03/28/%E6%9C%AC%E7%A7%91%E7%BB%8F%E5%8E%86/</id>
    <published>2022-03-28T05:53:29.000Z</published>
    <updated>2022-03-30T14:05:45.554Z</updated>
    
    <content type="html"><![CDATA[<p>最近有低年级学弟学妹参加相关夏令营，想参考一下我的建立，为例增加一下我的访问量，遂将cv传到博客来，哈哈哈哈~</p><iframe src="cv.pdf#toolbar=0." width="800px" height="1210px" frameborder="0" scrolling="no"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近有低年级学弟学妹参加相关夏令营，想参考一下我的建立，为例增加一下我的访问量，遂将cv传到博客来，哈哈哈哈~&lt;/p&gt;
&lt;iframe src=&quot;cv.pdf#toolbar=0.&quot; width=&quot;800px&quot; height=&quot;1210px&quot; frameborder=&quot;0&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LC-2217找到指定长度的回文数</title>
    <link href="http://example.com/2022/03/28/LC-2217%E6%89%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <id>http://example.com/2022/03/28/LC-2217%E6%89%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0/</id>
    <published>2022-03-28T05:11:07.119Z</published>
    <updated>2022-04-04T07:26:27.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-2217找到指定长度的回文数"><a href="https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/">LC-2217找到指定长度的回文数</a></h2><p>这道题是一个找规律的题型，仔细观察可以发现示例中输出的中间的数字貌似和上面的queries的数字有关系，例如<code>1 - 101、2-111</code>，可以发现输出的中间的数字和queries对应的差一。再观察第二个示例，这时验证了上面的想法，同时想到需要将输出拆成一般来对应，这样就更好找到相应的关系了，即<code>11, 13, 15</code> 分别对应了<code>2, 4, 6</code>，可以看到后面的个位数（没拆开时中间的数字）是相差1。</p><p>但是因为0不能当做前导，所以queries大于中间所能表示的数字时，例如三位回文数范围在第一个数为<strong>1</strong>的时候，范围为<code>101-191</code>，只能表示10个数，第十一个数字这时候需要前面加<strong>1</strong>，为<code>202</code>，也就是说最开始就因为前导不为<strong>0</strong>相差了一个基数。</p><p><strong>那么这个基数怎么表示呢？</strong></p><p>实际上我们可以看到因为是回文数，我们只观察一半，其实就是这一半的位数的最小值。</p><ul><li><code>intLength=3， 101拆开 10 | 1， base=10</code></li><li><code>intLength=4， 1001 拆开 10 | 01, base=10</code></li><li><code>intLength=5， 10001 拆开 100 | 01，base=100</code></li></ul><p>进一步总结：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><msup><mn>0</mn><mrow><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>如果intLength为偶数</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo stretchy="false">⌊</mo><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">⌋</mo></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>如果intLength为奇数</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}    base =  \begin{cases}    10 ^ {\frac{intLength}{2} - 1}, &amp;\text{如果intLength为偶数}\\    10 ^ {\lfloor \frac{intLength}{2} \rfloor}, &amp;\text{如果intLength为奇数}             \end{cases}\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7159em;"><span style="top:-3.7159em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0339em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0339em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">⌋</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2159em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7159em;"><span style="top:-3.7159em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">如果</span><span class="mord">intLength</span><span class="mord cjk_fallback">为偶数</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">如果</span><span class="mord">intLength</span><span class="mord cjk_fallback">为奇数</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2159em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></p><p>将<code>intLength</code>奇偶数整合到一起：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">base = 10 ^ {\frac{intLength - 1}{2}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0839em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0839em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>最后，左半边回文为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>+</mo><mi>q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">base + queries[i] - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">i</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>反转这个数，然后拼接到它的后面，就是第<code>queries[i]</code>个长度为<code>intLength</code>的回文。</p><p>这里有一个处理细节，就是如果是奇数，在反转前把地位数字去掉。</p><p>根据题目，如果超过了最大能表示的，就输出<code>-1</code>，最大的值其实就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>9</mn><mo>×</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">9 \times base</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span></span></span></span> ，原因如下，可见三位数到999后，只有90个。</p><hr><p>（queries[i]，回文数）</p><p>（1， 101）     （10， 191）</p><p>（11， 202）   （20，292）</p><p>（81， 909）   （90， 999）</p><hr><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kthPalindrome</span>(<span class="params">self, queries: <span class="type">List</span>[<span class="built_in">int</span>], intLength: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        n = (intLength - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        base = <span class="number">10</span> ** n</span><br><span class="line">        ans = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> queries:</span><br><span class="line">            <span class="keyword">if</span> num &gt; <span class="number">9</span> * base:</span><br><span class="line">                ans.append(-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num_str = <span class="built_in">str</span>(base + num - <span class="number">1</span>)</span><br><span class="line">                num_str2 = num_str[:-<span class="number">1</span>][::-<span class="number">1</span>] <span class="keyword">if</span> intLength % <span class="number">2</span> <span class="keyword">else</span> num_str[::-<span class="number">1</span>]</span><br><span class="line">                tmp = num_str + num_str2</span><br><span class="line"></span><br><span class="line">            ans.append(<span class="built_in">int</span>(tmp))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><blockquote><p>欢迎访问我的个人博客哦~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-2217找到指定长度的回文数&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/&quot;&gt;LC-2217找到指定长度的回文数&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这道题是一</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="数学规律" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>代理情况下，解决谷歌浏览器Chrome不能上网，其他浏览器可以谷歌搜索的问题</title>
    <link href="http://example.com/2022/03/27/%E4%BB%A3%E7%90%86%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E8%A7%A3%E5%86%B3%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8Chrome%E4%B8%8D%E8%83%BD%E4%B8%8A%E7%BD%91%EF%BC%8C%E5%85%B6%E4%BB%96%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%AF%E4%BB%A5%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/03/27/%E4%BB%A3%E7%90%86%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E8%A7%A3%E5%86%B3%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8Chrome%E4%B8%8D%E8%83%BD%E4%B8%8A%E7%BD%91%EF%BC%8C%E5%85%B6%E4%BB%96%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%AF%E4%BB%A5%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-03-27T02:22:29.185Z</published>
    <updated>2022-03-27T02:23:30.314Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代理情况下，解决谷歌浏览器Chrome不能上网，其他浏览器可以谷歌搜索的问题">代理情况下，解决谷歌浏览器Chrome不能上网，其他浏览器可以谷歌搜索的问题</h2><p><strong>设备和软件环境：</strong><br>mac + clash</p><p><strong>问题和解决方案：</strong><br>突然就不能登录google、github了，但是别的浏览器可以，折腾了很久！！！<br>后来发现，是google浏览器的问题，换成访客模式就可以，于是退出登录，清除缓存的所有数据，再次登录，就可以了！真是想不到！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代理情况下，解决谷歌浏览器Chrome不能上网，其他浏览器可以谷歌搜索的问题&quot;&gt;代理情况下，解决谷歌浏览器Chrome不能上网，其他浏览器可以谷歌搜索的问题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;设备和软件环境：&lt;/strong&gt;&lt;br&gt;
mac + clash&lt;/p&gt;</summary>
      
    
    
    
    <category term="软件使用" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="google，clash" scheme="http://example.com/tags/google%EF%BC%8Cclash/"/>
    
  </entry>
  
  <entry>
    <title>Competition08-竞赛实战案例-用户画像类</title>
    <link href="http://example.com/2022/03/26/Competition08-%E7%AB%9E%E8%B5%9B%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B-%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%E7%B1%BB/"/>
    <id>http://example.com/2022/03/26/Competition08-%E7%AB%9E%E8%B5%9B%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B-%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%E7%B1%BB/</id>
    <published>2022-03-26T06:10:22.642Z</published>
    <updated>2022-04-01T08:46:21.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="竞赛实战案例-用户画像类">竞赛实战案例-用户画像类</h2><h2 id="一、数据探索">一、数据探索</h2><ol><li><p>仔细查看每个数据的基本含义，打印出数据，看看是什么样子的</p></li><li><p>校验数据的正确性，缺失情</p></li><li><p>查看数据的分布的时候，除了看训练集和测试集的分布是否相似，还要看target的分布情况（describe）</p></li><li><p>查看数据的时候 需要看看是否有重复数据  <strong>nunique()</strong></p></li><li><p>针对属性信息的字段的离散和连续性，分开后统一分析。注意不是是数值的就是连续的，要看实际情况。</p><p><strong>1)离散型</strong>（还分为数值型和非数值型）</p><ul><li>**针对object类，**离散性变量一般要么是两个，要么是含有字典序，因此可按照字典序对object型变量先编码处理(id）</li><li>从pd.Serise类型转为numpy.anrray类型 需要在pd类型的数据后面加上values</li><li><strong>缺失值处理</strong>，同时为了能够更方便统计，首先做缺失值处理，对于非数值型离散字段可统一用-1进行填充</li><li>需用describe()函数判断是否有正无穷</li><li>在进行离散特征编码的时候，需要注意将值转为str，否则无法使用sort进行排序</li></ul><p><strong>2）连续型</strong></p><ul><li>查看缺失数据和无穷数据</li></ul><p><strong>3）时间类型</strong></p><ul><li><p>关于时间的处理上，可以按照一些字符串操作提取相应的信息，比如直接提取年份、月份、日期和小时点等等</p></li><li><p>还有一种相对万能可适用于各种场景的办法就是使用unix时间戳，可以灵活用于各种转换与计算</p></li><li><p><strong>时间段（上午、下午、晚上、凌晨）</strong> 其实就是获取时间后整除6     //6</p></li><li><p><strong>休息日or工作日</strong> <code> datetime.strptime(x.split(&quot; &quot;)[0], &quot;%Y-%m-%d&quot;).weekday()</code># weekday()返回0-6 分别代表周一到周日    这里整除5， 不是零就是一。 这两的datetime.strptime()就是将字符转为data对象</p></li></ul></li></ol><h2 id="二、特征工程">二、特征工程</h2><h3 id="1-通用特征">1. 通用特征</h3><ul><li>在进行特征编码的时候，需要将train和test一起编码</li><li>删除数据文件之间的冗余数据<ul><li>可以考虑用<code>set(new_transaction.columns) &amp; set(merchant.columns)</code>这种形式删除多余的列</li><li>用<code>.drop_duplicates()</code>函数删除重复的行，非原地删除</li></ul></li></ul><h3 id="2-业务特征">2. 业务特征</h3><ul><li><p>利用pandas工具的groupby进行统计，对机器性能要求比价高。（为了pandas统计需要，不需要再对缺失值以及离散字段进行转化了？？？）</p></li><li><p>利用diff()可以求两次行为之间的间隔时间。</p></li><li><p>记性特征统计的时候需要分裂了统计</p><ul><li>连续性数值变量需要统计如下变量：<code>['nunique', 'mean', 'min', 'max','var','skew', 'sum']</code> <code>var</code>方差    <code>skew</code>偏态分布</li><li>离散型变量需要统计如下变量：<code>['nunique']</code></li><li>id类别：<code>['size', 'count']</code></li></ul></li><li><p>合理使用<code>df.groupby().agg([...]) </code> 先进行分组，然后对分组后的部分列进行聚合参考<a href="https://blog.csdn.net/u012706792/article/details/80892510?spm=1001.2101.3001.6650.5&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-5.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-5.pc_relevant_paycolumn_v3&amp;utm_relevant_index=10">pandas group分组与agg聚合</a>。</p></li></ul><h3 id="3-文本特征">3. 文本特征</h3><ul><li><p><code>CountVectorizer</code>是属于常见的特征数值计算类，是一个文本特征提取方法。对于每一个训练文本，它只考虑每种词汇在该训练文本中出现的频率。</p></li><li><p>TfidfVectorizer可以把原始文本转化为<code>tf-idf</code>的特征矩阵，从而为后续的文本相似度计算。</p></li></ul><p><strong>上述两种方式实际上就是通过类统计词频的方式，没一句话都会由一个长度为单词表大小，每个位置代表单词的频率（CounterVectorizer）或者idf值（TfidfVectorizer）组成。即用向量表示文本。</strong></p><blockquote><p>在读取数据的时候，也要关注内存情况，可以使用del，gc.collect()释放内存。</p></blockquote><h2 id="三、模型训练">三、模型训练</h2><h3 id="1-随机森林">1. 随机森林</h3><h4 id="1-1-读取数据">1.1 读取数据</h4><ul><li>读取数据后，要去除重复列，拼接特征列。这里拼接特征一般用merge函数，记得用<code>fillna()</code>进行确实填充。</li></ul><h4 id="1-2-特征选取">1.2  特征选取</h4><ul><li><p>把id、target这些列去掉，这些不算特征。</p></li><li><p>去除缺失值比较多的特征</p></li><li><p>进行pearson相关性计算，注意这里使用pearson针对的时线性相关，即判断两个变量之间的相关性。因为不论正负相关，其实都是相关的，所以要<strong>取绝对值</strong>。</p><ul><li><p>输出格式为Dataframe类型，如图，所以取<code>.values[0][1] </code>，就是想要的相关系数。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/22/56bcedcb561b261f58c9cddbb608b0a1-image-20220315100347217-235182.png" alt="image-20220315100347217"></p></li></ul></li><li><p>取top300的特征进行建模，具体数量可选</p></li></ul><h4 id="1-3-参数调优">1.3 参数调优</h4><ul><li>使用sklearn库的网格搜索(GridSearch)</li><li>实际上是不同参数、不同取值的排列集合。处理在一定的参数空间内进行搜索，还需要根据调优结果多次手动迭代参数空间。每次迭代都是在上次最佳参数的基础上增加没有搜索过的参数区域。</li><li>输出的时含参数的最佳分类器。</li></ul><h4 id="1-4-训练预测">1.4 训练预测</h4><ul><li>使用k折交叉验证<ul><li>避免模型对训练数据的过拟合</li><li>模型对测试集的预测结果更具有健壮性。</li><li>可以生产用于Stacking融合模型的特征，即训练集的交叉预测结果和测试集的模型预测结果。</li></ul></li></ul><h3 id="2-LightGBM">2. LightGBM</h3><p>这个模型的四个模块和随机森林是一样的，特征选取使用了wrapper方法，参数调优阶段选择hyperopt。</p><h4 id="2-1-特征提取">2.1 特征提取</h4><p>这部分主要是选择出重要的特征参数，使用k折交叉验证，将数据分为几个train和test的形式，然后使用lgb进行train，最后得到的模型有一个<code>.feature_importance()</code>属性，然后进行排序就可以了。</p><p>这里的输入只是使用了train的数据，没有使用test的。</p><h4 id="2-2-参数调优">2.2 参数调优</h4><p>Hyperopt 是一个sklearn的Python库，他在搜索空间进行串行和并行的优化，搜索空间可以实值、离散值和条件维度，提供了传递参数空间和评估函数的接口。</p><p>这里的输入只是用到了train，输出是<strong>最佳的参数字典</strong>。</p><h4 id="2-3-需要进行计算的部分">2.3 需要进行计算的部分</h4><ul><li>需要计算所有test的数据预测的价格是多少，就是k折验证每次累加，最后求平均值。</li><li>需要计算所有train的数据预测的价格是多少，就是k折验证每次累加，最后求平均值。</li><li>需要计算单次k折验证的时候，针对train的价格计算mse，用来计算最后的score。<strong>这个得分用于后面的模型融合。</strong></li><li>最后保存的submission和第一个其实是一样的，只不过改成了需要的提交格式<code>[card_id, target]</code></li></ul><h3 id="3-XGboot">3. XGboot</h3><h4 id="3-1-特征提取">3.1 特征提取</h4><p>相较于前面两个模型，这里使用了nlp特征，并且合并成了是sparse稀疏矩阵。略过特征选取阶段，考虑使用特征全集进行建模。</p><h4 id="3-2-参数调优">3.2 参数调优</h4><p>使用beyesian(贝叶斯)方法，该方法调参通过最大化评估分值进行优化，而评估指标均方根应该是越小越好，所以采用负值的均方根误差作为优化目标。</p><h4 id="3-3-需要进行计算的部分">3.3 需要进行计算的部分</h4><p>同上。</p><h2 id="四、高效提分">四、高效提分</h2><h3 id="1-特征优化">1. 特征优化</h3><h4 id="1-1-基础统计特征">1.1 基础统计特征</h4><p>这部分主要以card_id为key进行聚合统计。</p><h4 id="1-2-全局card-id">1.2 全局card_id</h4><p>主要包括与用户行为相关时间相关的统计。</p><h4 id="1-3-最近两个月的card-id">1.3 最近两个月的card_id</h4><p>和上面的类似，主要区别在于时间范围不同。</p><h4 id="1-4-补充特征">1.4 补充特征</h4><p>此部分特征大多数具有也业务意义，比如更好的发现异常值。</p><h3 id="2-融合技巧">2. 融合技巧</h3><h4 id="2-1-单模结果">2.1 单模结果</h4><h4 id="2-2-加权融合">2.2 加权融合</h4><p><code>Weight_average = (LightGBM + XGBoost + CatBoots) / 3</code></p><h4 id="2-3-Stacking融合">2.3 Stacking融合</h4><h4 id="2-4-Trick-融合">2.4 Trick 融合</h4><ul><li>方案一：分类模型结果 * （-33.219281） + （1 - 分类结果）* 非异常值得回归模型</li><li>方案而：方案一的结果 * 0.5 + 全量数据的归回模型</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;竞赛实战案例-用户画像类&quot;&gt;竞赛实战案例-用户画像类&lt;/h2&gt;
&lt;h2 id=&quot;一、数据探索&quot;&gt;一、数据探索&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;仔细查看每个数据的基本含义，打印出数据，看看是什么样子的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;校验数据的正确性，缺失情</summary>
      
    
    
    
    <category term="竞赛" scheme="http://example.com/categories/%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="特征工程，用户画像" scheme="http://example.com/tags/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B%EF%BC%8C%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>LC-102.二叉树的层序遍历</title>
    <link href="http://example.com/2022/03/25/LC-102%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    <id>http://example.com/2022/03/25/LC-102%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</id>
    <published>2022-03-25T12:58:10.578Z</published>
    <updated>2022-04-04T07:25:49.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-102-二叉树的层序遍历"><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">LC-102.二叉树的层序遍历</a></h2><p>这道题常规做法是使用队列，按层进行遍历，参考<a href="https://leetcode-cn.com/submissions/detail/289392881/">队列方案</a>。但是也可以使用递归的方式。</p><p>在递归过程中，其实递归的本质没有改变，只是正常的递归，但是在递归的过程中，进行如下操作：</p><ul><li>根据题意，res一定是一个二维的列表，并且每一个list代表一层。</li><li>递归的时候，一定是先进入左子树，再右子树，因为是从左到右的层序遍历。</li><li><code>l_depth = res[depth]</code>这个维度代表第<code>depth</code>层的节点，那只要在遍历的过程中利用<code>depth</code>作为索引找到这个list，然后依次从左到右的添加进去就好啦。</li></ul><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">levelOrder</span>(<span class="params">self, root: TreeNode</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">root, depth</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> root: <span class="keyword">return</span> </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(res) == depth: res.append([])  <span class="comment"># 如果第depth还没有，添加一个[]</span></span><br><span class="line">            res[depth].append(root.val)  <span class="comment"># 利用索引找到第depth层的list，然后添加。</span></span><br><span class="line">            <span class="keyword">if</span> root.left: func(root.left, depth + <span class="number">1</span>)  <span class="comment"># 一定要从左到右添加</span></span><br><span class="line">            <span class="keyword">if</span> root.right: func(root.right, depth + <span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        func(root, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-102-二叉树的层序遍历&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-level-order-traversal/&quot;&gt;LC-102.二叉树的层序遍历&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这道题常规做法是使</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>LC-2217.找到指定长度的回文数</title>
    <link href="http://example.com/2022/03/21/LC-18%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://example.com/2022/03/21/LC-18%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2022-03-21T13:31:51.757Z</published>
    <updated>2022-04-04T07:25:46.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LC-2217-找到指定长度的回文数"><a href="https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/">LC-2217.找到指定长度的回文数</a></h2><p>这道题是一个找规律的题型，仔细观察可以发现示例中输出的中间的数字貌似和上面的queries的数字有关系，例如<code>1 - 101、2-111</code>，可以发现输出的中间的数字和queries对应的差一。再观察第二个示例，这时验证了上面的想法，同时想到需要将输出拆成一般来对应，这样就更好找到相应的关系了，即<code>11, 13, 15</code> 分别对应了<code>2, 4, 6</code>，可以看到后面的个位数（没拆开时中间的数字）是相差1。</p><p>但是因为0不能当做前导，所以queries大于中间所能表示的数字时，例如三位回文数范围在第一个数为<strong>1</strong>的时候，范围为<code>101-191</code>，只能表示10个数，第十一个数字这时候需要前面加<strong>1</strong>，为<code>202</code>，也就是说最开始就因为前导不为<strong>0</strong>相差了一个基数。</p><p><strong>那么这个基数怎么表示呢？</strong></p><p>实际上我们可以看到因为是回文数，我们只观察一半，其实就是这一半的位数的最小值。</p><ul><li><code>intLength=3， 101拆开 10 | 1， base=10</code></li><li><code>intLength=4， 1001 拆开 10 | 01, base=10</code></li><li><code>intLength=5， 10001 拆开 100 | 01，base=100</code></li></ul><p>进一步总结：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><msup><mn>0</mn><mrow><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>如果intLength为偶数</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo stretchy="false">⌊</mo><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">⌋</mo></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>如果intLength为奇数</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}base =  \begin{cases}10 ^ {\frac{intLength}{2} - 1}, &amp;\text{如果intLength为偶数}\\10 ^ {\lfloor \frac{intLength}{2} \rfloor}, &amp;\text{如果intLength为奇数}   \end{cases}\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7159em;"><span style="top:-3.7159em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0339em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0339em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">⌋</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2159em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7159em;"><span style="top:-3.7159em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">如果</span><span class="mord">intLength</span><span class="mord cjk_fallback">为偶数</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0339em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">如果</span><span class="mord">intLength</span><span class="mord cjk_fallback">为奇数</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2159em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></p><p>将<code>intLength</code>奇偶数整合到一起：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mfrac><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">base = 10 ^ {\frac{intLength - 1}{2}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0839em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0839em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9584em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4624em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>最后，左半边回文为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>+</mo><mi>q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">base + queries[i] - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">i</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>反转这个数，然后拼接到它的后面，就是第<code>queries[i]</code>个长度为<code>intLength</code>的回文。</p><p>这里有一个处理细节，就是如果是奇数，在反转前把地位数字去掉。</p><p>根据题目，如果超过了最大能表示的，就输出<code>-1</code>，最大的值其实就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>9</mn><mo>×</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">9 \times base</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span></span></span></span> ，原因如下，可见三位数到999后，只有90个。</p><hr><p>（queries[i]，回文数）</p><p>（1， 101）     （10， 191）</p><p>（11， 202）   （20，292）</p><p>（81， 909）   （90， 999）</p><hr><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kthPalindrome</span>(<span class="params">self, queries: <span class="type">List</span>[<span class="built_in">int</span>], intLength: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        n = (intLength - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        base = <span class="number">10</span> ** n</span><br><span class="line">        ans = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> queries:</span><br><span class="line">            <span class="keyword">if</span> num &gt; <span class="number">9</span> * base:</span><br><span class="line">                ans.append(-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num_str = <span class="built_in">str</span>(base + num - <span class="number">1</span>)</span><br><span class="line">                num_str2 = num_str[:-<span class="number">1</span>][::-<span class="number">1</span>] <span class="keyword">if</span> intLength % <span class="number">2</span> <span class="keyword">else</span> num_str[::-<span class="number">1</span>]</span><br><span class="line">                tmp = num_str + num_str2</span><br><span class="line"></span><br><span class="line">            ans.append(<span class="built_in">int</span>(tmp))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LC-2217-找到指定长度的回文数&quot;&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/&quot;&gt;LC-2217.找到指定长度的回文数&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这道题</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="数学" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>机器学习-集成学习</title>
    <link href="http://example.com/2022/03/21/Github%E7%BB%8F%E5%B8%B8%E6%80%A7%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2022/03/21/Github%E7%BB%8F%E5%B8%B8%E6%80%A7%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F/</id>
    <published>2022-03-20T18:51:20.021Z</published>
    <updated>2022-03-22T02:46:18.761Z</updated>
    
    <content type="html"><![CDATA[<h1>Github经常性连接不上解决方式</h1><p>发表于 2021-03-17 更新于 2021-03-25 分类于 <a href="https://jxeditor.github.io/categories/%E6%95%99%E7%A8%8B/">教程</a></p><blockquote><p>平常开发经常性需要访问github代码,频繁连接不上github</p></blockquote><h2 id="解决方式">解决方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 访问https://www.ipaddress.com/或者https://site.ip138.com/</span><br><span class="line"># 找到目前github的IP映射</span><br><span class="line">输入域名查询IP地址</span><br><span class="line"></span><br><span class="line"># 修改本机的hosts文件</span><br><span class="line">140.82.114.4github.com</span><br><span class="line">199.232.69.194github.global.ssl.fastly.net</span><br><span class="line">185.199.108.133raw.githubusercontent.com</span><br><span class="line"></span><br><span class="line"># ps.如果使用的是Mac本,可能需要添加更多的映射关系</span><br><span class="line">---Mac本直接别用Safari浏览器,换Google浏览器就可以访问了</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Github经常性连接不上解决方式&lt;/h1&gt;
&lt;p&gt;发表于 2021-03-17 更新于 2021-03-25 分类于 &lt;a href=&quot;https://jxeditor.github.io/categories/%E6%95%99%E7%A8%8B/&quot;&gt;教程&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="工具使用" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Github" scheme="http://example.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-堆排序(Heap Sort)</title>
    <link href="http://example.com/2022/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%A0%86%E6%8E%92%E5%BA%8FHeap%20Sort/"/>
    <id>http://example.com/2022/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%A0%86%E6%8E%92%E5%BA%8FHeap%20Sort/</id>
    <published>2022-03-20T18:51:19.988Z</published>
    <updated>2022-03-22T02:47:09.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、堆Heap">一、堆Heap</h2><p>堆是一个完全二叉树</p><p>大顶堆：每个非叶子节点大于或者等于其左右孩子节点的值</p><p>小顶堆：每个非叶子节点大于或者等于其左右孩子节点的值</p><p>根节点是大顶堆中最大的，是小顶堆中最小的</p><h2 id="二、构建大顶堆">二、构建大顶堆</h2><h3 id="1-核心算法">1. 核心算法</h3><p>如果一个节点的左右孩子的最大值比它大，则进行交换。</p><p>如果节点被交换到新的位置，还要继续和它的孩子节点比较，重复上面的步骤。</p><h3 id="2-起点节点的选择">2. 起点节点的选择</h3><p>从完全二叉树最后一个节点的双亲节点开始，即最后一层的最右的父节点开始。</p><p>如果节点从0开始编号，长度为n，那么应该从n/2-1开始。</p><p>举个例子：a[6] = [7, 3, 8, 5, 1, 2]， 开始的位置是 6 /2=2,也就是8的位置。</p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/22/df3abae2089f6f1837d166d2706e833c-image-20220311175414861-80e8f1.png" alt="image-20220311175414861"  /><h3 id="3-下个节点的选择">3. 下个节点的选择</h3><p>从起始位置开始后，向左找其同层的节点。一层结束后，就上一层继续从右向左。</p><p>总的来说，就是从下到上，从右到左。</p><h3 id="4-大顶堆的目标">4. 大顶堆的目标</h3><p>确保每个节点都比左右节点的值大。</p><h3 id="5-排序">5. 排序</h3><p>将大顶堆根节点这个最大值和最后一个叶子节点交换，那么最后一个节点就是最大值，将这个叶子节点<strong>排在待排序节点之外</strong>。</p><p>从根节点开始（新的根节点），重新调整为大顶堆后，重复上一步。</p><p>堆顶和最后一个节点交换，并排除最后一个节点，完成排序。</p><p>**另一种说法：**大顶堆的交换顶部元素A和最后一个元素B，堆的size减1，再将顶部的B执行下沉过程，最后返回元素A。注意，虽然堆的size减小了1，但实际上并没有元素被删除，数组长度也没有任何变化，被pop的元素只是被放在了数组中size之后的位置。</p><h3 id="6-插入元素">6. 插入元素</h3><p>在大顶堆中插入一个元素，分为如下两种情况：</p><ul><li>堆未满，将元素放在当前最后一个元素的后面，然后执行上浮过程；</li><li>堆已满，如果该0元素大于堆顶则无法插入，小于堆顶则替换堆顶，再执行下沉过程。</li></ul><h3 id="7-总结">7. 总结</h3><ul><li><p>利用堆性质的一种选择排序，在堆顶选出最大值或者最小值</p></li><li><p>**时间复杂度：**O(nlogn)  由于堆排序对原始记录的排序状态并不敏感，因此它无论是最好、最坏和平均时间复杂度均为O(nlogn)</p></li><li><p><strong>空间复杂度：</strong> 只是使用了一个交换用的空间，空间复杂度就是O(1)</p></li><li><p>不稳定的排序算法</p></li></ul><h3 id="8-代码实现">8. 代码实现</h3><p><strong>参考博客</strong></p><blockquote><p><a href="https://www.cnblogs.com/yinzhengjie/p/10970889.html">Python入门篇-数据结构堆排序Heap Sort</a></p><p><a href="https://zhuanlan.zhihu.com/p/63089552">拜托，面试别再问我堆（排序）了！</a></p><p><a href="https://www.cnblogs.com/sunshineliulu/p/12995910.html">图解大顶堆的构建、排序过程</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、堆Heap&quot;&gt;一、堆Heap&lt;/h2&gt;
&lt;p&gt;堆是一个完全二叉树&lt;/p&gt;
&lt;p&gt;大顶堆：每个非叶子节点大于或者等于其左右孩子节点的值&lt;/p&gt;
&lt;p&gt;小顶堆：每个非叶子节点大于或者等于其左右孩子节点的值&lt;/p&gt;
&lt;p&gt;根节点是大顶堆中最大的，是小顶堆中最小的&lt;/</summary>
      
    
    
    
    <category term="数据结构" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="堆，排序" scheme="http://example.com/tags/%E5%A0%86%EF%BC%8C%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>解决typora图片丢失问题</title>
    <link href="http://example.com/2022/03/21/%E8%A7%A3%E5%86%B3typora%E5%9B%BE%E7%89%87%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/03/21/%E8%A7%A3%E5%86%B3typora%E5%9B%BE%E7%89%87%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/</id>
    <published>2022-03-20T18:51:19.982Z</published>
    <updated>2022-03-27T02:24:30.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决typora图片丢失问题">解决typora图片丢失问题</h2><p>Typora + PicGo-Core + Github实现图片上传Github</p><h3 id="1-配置nodejs环境">1. 配置nodejs环境</h3><p>需要电脑配置有nodejs环境，参考<a href="https://segmentfault.com/a/1190000023871608">windows下安装nodejs</a>；</p><h3 id="2-安装picgo">2. 安装picgo</h3><p>在配置好nodejs环境后，用npm安装picgo，命令如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install picgo -g</span><br></pre></td></tr></table></figure><p>   安装完成后，输入命令<code>where picgo</code>, 记录第一个路径。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/27/6ee1a58f4cc3e0c92f621bb752362bf7-6ee1a58f4cc3e0c92f621bb752362bf7-image-20220317173319087-c22abc-3dbff1.png" alt="image-20220317173319087"></p><h3 id="3-安装github-plus">3. 安装github-plus</h3><p>官方提供的github上传图库不好用，安装一款新的上传插件<code>github-plus</code>, 命令行执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo install github-plus</span><br></pre></td></tr></table></figure><p>安装好后会有“插件安装成功”的提示。</p><h3 id="4-创建github仓库">4. 创建github仓库</h3><ul><li><p>想创建一个空的仓库</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/bd3cd8ad91cc9d6e069bbae4075737ec-image-20220317174326731-a81285.png" alt="image-20220317174326731"></p></li><li><p>新建个人access token</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/89a89a420259a1427056092ed05412b8-image-20220317174949176-f54dab.png" alt="image-20220317174949176"></p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/503449f7ab7039d77e31e281528f9b98-image-20220317175218256-c4954e.png" alt="image-20220317175218256"></p><p><strong>将得到的token进行保存，后面要用，否则就不再可见了！！！</strong></p></li></ul><h3 id="5-Typora图像设置">5. Typora图像设置</h3><p>在<code>Typora</code>中配置图像上传信息，设置PicGo的配置信息。</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/40c886408bf1fd2aad6b06464e3afda6-image-20220317173725450-d97b7e.png" alt="image-20220317173725450"></p><ul><li><p>首先上传服务选择<code>PicGo-Core(command line)</code></p></li><li><p>打开配置文件，在打开的配置文件，添加相关信息</p></li></ul><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/bb64a03f7029d2a0a269775e90baecf9-image-20220317205305847-40d155.png" alt="image-20220317205305847"></p><h3 id="6-测试">6. 测试</h3><ul><li>将上传服务修改为如图所示</li><li>自定义命令</li><li>点击验证图片上传选项</li><li>如果成功，如下图所示</li></ul><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/df35251e0c1eff57e1e1ed9b65f1632a-image-20220317184212335-7b46be.png" alt="image-20220317184212335"></p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/5d13e0a0a3ea08e93a64338fec735ef6-image-20220317184702101-9860f4.png" alt="image-20220317184702101"></p><h3 id="7-图片上传">7. 图片上传</h3><ul><li><p>将图片拖入Typora中，然后在图片单击右键，图片上传即可。</p></li><li><p>另外也可以在设置了设置每次复制图片的时候，自动上传，如图：</p><p><img src="https://raw.githubusercontent.com/zhiqiang00/Picbed/main/blog-images/2022/03/17/6876e8c70f73cdc6034f321c10b35b88-image-20220317205722537-05ce94.png" alt="image-20220317205722537"></p></li><li><p>还可以在格式里选择图片，一次性上传全部图片。</p></li></ul><h3 id="8-图片重命名">8. 图片重命名</h3><p>由于我们日后博客数量较多，图片也会很多，所以将图片合理命名也很重要。更重要的是，如果图片命名重复，会报错无法上传，重命名会保证图片名字不同。</p><p><code>picgo-plugin-rename-file</code> 插件可以帮我们安装一定的规则将文件进行重命名，具体设置请看<a href="https://github.com/liuwave/picgo-plugin-rename-file">github</a>。</p><ul><li>输入一下命令安装:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo install rename-file</span><br></pre></td></tr></table></figure><ul><li>安装完成后，打开<code>picgo</code>的配置文件<code>C:\Users\xxx\.picgo\config.json</code>，或者像上面第五步那样打开配置文件。<strong>末尾最后一个大括号前</strong>添加一下信息即可。具体命名方式可以去github上看，</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">,</span><br><span class="line">&quot;picgo-plugin-rename-file&quot;: &#123;</span><br><span class="line">&quot;format&quot;: &quot;&#123;y&#125;/&#123;m&#125;/&#123;d&#125;/&#123;hash&#125;-&#123;origin&#125;-&#123;rand:6&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参考博客</strong></p><ol><li><a href="https://www.cnblogs.com/xiaowj/p/13934555.html">Typora + PicGo-Core + Github 实现图片上传到Github </a></li><li><a href="https://blog.csdn.net/brawly/article/details/106436042?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.pc_relevant_default&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3">Typora+PicGo-Core(command line)+SMMS、github、gitee实现Typora图片上传到图床</a></li><li><a href="https://blog.csdn.net/a554521655/article/details/113443338">typora+PicGO-Core上传图片到github</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决typora图片丢失问题&quot;&gt;解决typora图片丢失问题&lt;/h2&gt;
&lt;p&gt;Typora + PicGo-Core + Github实现图片上传Github&lt;/p&gt;
&lt;h3 id=&quot;1-配置nodejs环境&quot;&gt;1. 配置nodejs环境&lt;/h3&gt;
&lt;p&gt;需要电脑</summary>
      
    
    
    
    <category term="工具使用" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="typora，Markdown" scheme="http://example.com/tags/typora%EF%BC%8CMarkdown/"/>
    
    <category term="图床" scheme="http://example.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
</feed>
